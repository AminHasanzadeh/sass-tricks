*, *::before, *::after {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}

$blockSize: 25px;
$gridSize: $blockSize * 1.2;
$xdelay: -0.2s;
$ydelay: -0.2s;
$count: 400;

body {
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #111;
}
.scene {
    position: relative;
    width: 100%;
    height: 100vmin;
    transform-style: preserve-3d;
    .box {
        background-color: #2b2b2b;
        position: absolute;
        top: calc(50% - ($gridSize * 20) / 2);
        left: calc(50% - ($gridSize * 20) / 2);
        width: $gridSize * 20;
        height: $gridSize * 20;
        box-shadow: 0 0 6px 8px rgba($color: #000000, $alpha: 0.3);
        display: grid;
        grid-template-columns: repeat(20, $gridSize);
        grid-template-rows: repeat(20, $gridSize);
        transform: rotateX(55deg) rotateZ(-45deg);
        transform-style: preserve-3d;
        transition: 2s;
        .block {
            width: $blockSize;
            height: $blockSize;
            // border: 1px solid red;
            animation: rising 4s ease calc(var(--delay1) + var(--delay2)) infinite alternate;
            @for $j from 0 through 484 {
                &:nth-child(#{$j + 1}) {
                    background-color: hsl((360deg / $count * $j), 70%, 70%);
                }
            }
            @for $i from 0 to 20 {
                &:nth-child(20n + #{$i + 1}) {
                    --delay1: #{$i * $xdelay};
                }
                &:nth-child(n + #{(20 * $i) + 1}) { 
                    --delay2: #{$i * $ydelay};
                }
            }
        }
    }
}
@keyframes rising {
    0% {
        transform: translateZ(30px);
    }
    100% {
        transform: translateZ(100px);
    }
}
input[type='submit'] {
    width: 100px;
    height: 100px;
    background-color: #ff3d3d;
    border: none;
    outline: none;
    color: white;
    font-size: 20px;
    border-radius: 50%;
    transform-style: preserve-3d;
    transform: rotateX(20deg) rotateY(20deg) rotateZ(-20deg);
    position: absolute;
    left: 60px;
    bottom: 60px;
    transition: 0.4s;
    cursor: pointer;
    &:hover {
        transform: rotateX(20deg) rotateY(20deg) rotateZ(-20deg) translateZ(20px);
    }
    &:hover ~ .box {
        transform: rotateX(55deg) rotateZ(45deg);
    }
}