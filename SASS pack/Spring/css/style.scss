*, *::before, *::after {
    padding: 0;
    margin: 0;
    box-sizing: border-box;
}
// change size for big or small balls . change speed to rotate faster or slower DO NOT CHANGE COUNT :
//unless you added divs with ball class into html otherwise dont
$size: 20px;
$count: 200;
$speed: 150s;
body {
    display: flex;
    justify-content: center;
    align-items: center;
    background-color: #111;
    perspective: 900px;
    overflow: hidden;
}
.scene {
    width: 100%;
    height: 100vmin;
    position: relative;
    transform-style: preserve-3d;
    display: flex;
    justify-content: center;
    align-items: center;
    animation: rotating $speed / 4 linear infinite;
    .ball {
        width: $size;
        height: $size;
        border-radius: 50%;
        position: absolute;
        animation: spring $speed linear infinite;
        @for $i from 1 through $count {
            &:nth-child(#{$i}) {
                background-color: hsl(((360deg / $count) * $i), 50%, 70%);
                animation-delay: #{($speed / $count * $i * -1)};
            }
        }
    }
}
@keyframes spring {
    0% {
        transform: rotate(0deg) translateY($size * 9) rotateX(0deg) translateZ($size * 3) rotateX(5400deg) rotateY(360deg) ;
    }
    100% {
        transform: rotate(360deg) translateY($size * 9) rotateX(5400deg) rotateZ(0deg) translateZ($size * 3) rotateX(0deg) rotateY(0deg) ;
    }
}
@keyframes rotating {
    0% {
        transform: rotateY(0deg) rotateX(0deg);
    }
    100% {
        transform: rotateY(360deg) rotateX(360deg);
    }
}